// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  email String @unique
  password String
  created DateTime @default(now())
  updated DateTime @updatedAt

  posts Post[]
  comments Comment[]

  @@map("user")
}

model Post{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title String
  content String
  image String?
  authorId String @db.ObjectId
  created DateTime @default(now())
  updated DateTime @updatedAt

  categories CategoriesOnPosts[]
  comments Comment[]

  user User @relation(fields: [authorId], references: [id])
  
  @@map("post")
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  number Int
  posts CategoriesOnPosts[]
}

// mongodb doesnt support compound keys
model CategoriesOnPosts {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  postId String @db.ObjectId
  categoryId String @db.ObjectId
  createdAt DateTime @default(now())

  post Post @relation(fields: [postId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@map("categories_on_posts")
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String
  postId String @db.ObjectId
  userId String @db.ObjectId

  post Post @relation(fields:[postId], references: [id])
  user User @relation(fields:[userId], references: [id])
}